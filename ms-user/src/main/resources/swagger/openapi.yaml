openapi: 3.0.3
info:
  title: CRUD de Usuários
  description: API para realizar operações CRUD em usuários.
  version: 1.0.0

tags:
  - name: user
    description: Everything about your Users
servers:
  - url: http://localhost:8080
    description: Localhost server

paths:
  /users:
    get:
      security:
        - bearerAuth: [ ]
      summary: Listar todos os usuários
      responses:
        '200':
          description: Lista de usuários recuperada com sucesso.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserResponse'
    post:
      security:
        - bearerAuth: [ ]
      summary: Criar um novo usuário
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
      responses:
        '201':
          description: Usuário criado com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
  /users/{userId}:
    parameters:
      - in: path
        name: userId
        required: true
        description: ID do usuário a ser manipulado.
        schema:
          type: integer
          format: int64
    get:
      security:
        - bearerAuth: [ ]
      summary: Obter detalhes de um usuário específico
      responses:
        '200':
          description: Detalhes do usuário recuperados com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
    put:
      security:
        - bearerAuth: [ ]
      summary: Atualizar um usuário existente
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
      responses:
        '200':
          description: Usuário atualizado com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
    delete:
      security:
        - bearerAuth: [ ]
      summary: Excluir um usuário existente
      responses:
        '204':
          description: Usuário excluído com sucesso.

components:
  schemas:
    UserRequest:
      type: object
      properties:
        username:
          type: string
          maxLength: 50
        email:
          type: string
          format: email
          maxLength: 50
        password:
          type: string
          maxLength: 255
        firstName:
          type: string
          maxLength: 150
        lastName:
          type: string
          maxLength: 150
        phoneNumber:
          type: string
          maxLength: 20
      required:
        - username
        - email
        - password
        - firstName
        - lastName
        - phoneNumber
    UserResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        email:
          type: string
          format: email
        firstName:
          type: string
        lastName:
          type: string
        phoneNumber:
          type: string
        referenceId:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    UserEvent:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        referenceId:
          type: string
          format: uuid
        eventType:
          type: string
          enum: [CREATE, UPDATE, DELETE]
    Problem:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
        title:
          type: string
        message:
          type: string
        path:
          type: string
        timestamp:
          type: string
          format: date-time
      title: Problem
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

